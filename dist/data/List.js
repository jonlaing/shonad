"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&("get"in desc?m.__esModule:!desc.writable&&!desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.drop=exports.lastIndexOf=exports.indexOf=exports.append=exports.update=exports.adjust=exports.splitAt=exports.nth=exports.findLastIndex=exports.findLast=exports.findIndex=exports.find=exports.isEmpty=exports.init=exports.tail=exports.last=exports.reverse=exports.head=void 0;const Fn=__importStar(require("../base/Function")),Maybe=__importStar(require("./Maybe")),Util=__importStar(require("../base/Util")),reverse=(exports.head=Maybe.listToMaybe,a=>{let copy=a;return copy.reverse()}),tail=(exports.reverse=reverse,exports.last=Fn.pipe(exports.reverse,Maybe.listToMaybe),a=>0===a.length?Maybe.nothing():Maybe.just(a.slice(1))),init=(exports.tail=tail,a=>0===a.length?Maybe.nothing():Maybe.just(a.slice(0,-1))),isEmpty=(exports.init=init,a=>0===a.length),find_=(exports.isEmpty=isEmpty,(pred,xs)=>{if((0,exports.isEmpty)(xs))return Maybe.nothing();var[xs,...as_]=xs;return pred(xs)?Maybe.just(xs):find_(pred,as_)}),take=(exports.find=Fn.curry((pred,xs)=>{xs=xs.filter(pred);return 0===xs.length?Maybe.nothing():(0,exports.head)(xs)}),exports.findIndex=Fn.curry((pred,xs)=>{xs=xs.reduce((acc,x,i)=>-1===i&&pred(x)?i:acc,-1);return-1===xs?Maybe.nothing():Maybe.just(xs)}),exports.findLast=Fn.curry((pred,xs)=>Fn.compose((0,exports.find)(pred),exports.reverse)(xs)),exports.findLastIndex=Fn.curry((pred,xs)=>Fn.compose((0,exports.findIndex)(pred),exports.reverse)(xs)),exports.nth=Fn.curry((i,xs)=>xs.length<i+1?Maybe.nothing():Maybe.just(xs[i])),Fn.curry((i,xs)=>{const loop=(i,xs,acc)=>{if(i<=0)return acc;if(0===xs.length)return acc;var[xs,...b]=xs;return loop(i-1,b,[...acc,xs])};return loop(i,xs,[])})),takeLast=Fn.curry((i,xs)=>Fn.pipe(exports.reverse,take(i),exports.reverse)(xs));exports.splitAt=Fn.curry((i,xs)=>[take(i,xs),takeLast(xs.length-i,xs)]),exports.adjust=Fn.curry((f,i,xs)=>{if(i<0||i>=xs.length)return xs;var[xs,tl]=(0,exports.splitAt)(i+1,xs);if(0===xs.length)return tl;if(1===xs.length)return[f(xs[0]),...tl];var[i,xs]=(0,exports.splitAt)(i,xs);return[...i,f(xs[0]),...tl]}),exports.update=Fn.curry((x,i,xs)=>(0,exports.adjust)(Fn.always(x),i,xs)),exports.append=Fn.curry((x,xs)=>[...xs,x]),exports.indexOf=Fn.curry((a,xs)=>(0,exports.findIndex)(Util.eq(a),xs)),exports.lastIndexOf=Fn.curry((a,xs)=>Fn.compose((0,exports.indexOf)(a),exports.reverse)(xs)),exports.drop=Fn.curry((n,xs)=>{if(0===xs.length)return[];if(0===n)return xs;var[,...xs]=xs;return(0,exports.drop)(n-1,xs)});
//# sourceMappingURL=List.js.map