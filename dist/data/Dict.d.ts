import { Function } from "ts-toolbelt";
import * as Maybe from "./Maybe";
declare function _get(key: string): (dict: Record<string, any>) => Maybe.Maybe<any>;
declare function _get(key: string, dict: Record<string, any>): Maybe.Maybe<any>;
export declare const get: typeof _get;
declare function _set(key: string): (val: any, dict: Record<string, any>) => Record<string, any>;
declare function _set(key: string, val: any): (dict: Record<string, any>) => Record<string, any>;
declare function _set(key: string, val: any, dict: Record<string, any>): Record<string, any>;
export declare const set: typeof _set;
declare function _unset<A extends Record<string, any>>(k: string): (dict: A) => Partial<A>;
declare function _unset<A extends Record<string, any>>(k: string, dict: A): Partial<A>;
export declare const unset: typeof _unset;
declare function _eqProps(k: string): (d0: Record<string, any>, d1: Record<string, any>) => boolean;
declare function _eqProps(k: string, d0: Record<string, any>): (d1: Record<string, any>) => boolean;
declare function _eqProps(k: string, d0: Record<string, any>, d1: Record<string, any>): boolean;
export declare const eqProps: typeof _eqProps;
declare function _map(f: Function.Function): (dict: Record<string, any>) => Record<string, any>;
declare function _map(f: Function.Function, dict: Record<string, any>): Record<string, any>;
export declare const map: typeof _map;
declare function _mapi(f: (value: any, key: string) => any): (dict: Record<string, any>) => Record<string, any>;
declare function _mapi(f: (value: any, key: string) => any, dict: Record<string, any>): Record<string, any>;
export declare const mapi: typeof _mapi;
declare function _evolve(e: Record<string, Function.Function>): (d: Record<string, any>) => Record<string, any>;
declare function _evolve(e: Record<string, Function.Function>, d: Record<string, any>): Record<string, any>;
export declare const evolve: typeof _evolve;
declare function _has(k: string): (d: Record<string, any>) => boolean;
declare function _has(k: string, d: Record<string, any>): boolean;
export declare const has: typeof _has;
export {};
